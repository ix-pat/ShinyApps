source("/home/pat/Dropbox/Stat/src/main-functions.R")
brk <- c(0,1,2,5,10)
hhh <- c(2,4,1,.5)
n <- 100
samp <- genera_dati(brk = brk,hhh = hhh,n = n)
_src
src_("stat-base.R")
dat2
src_("stat-base.R")
dat3
source(src_("stat-base.R"))
dat3
dens
histp
shiny::runApp()
x <- 3
source("/home/pat/Dropbox/Stat/src/main-functions.R")
brk <- c(0,1,2,5,10)
hhh <- c(2,4,1,.5)
n <- 100
samp <- genera_dati(brk = brk,hhh = hhh,n = n)
source(src_("stat-base.R"))
histp(axes = T)
h.int(-1e9,x,density=20)
h.int(min(brk)-1,x,density=20)
h.int(min(brk)-1,5,density=20)
h.int(min(brk)-1,x,density=20,col=2)
histp(axes = T)
h.int(min(brk)-1,x,density=20,col=2)
runApp()
runApp()
runApp()
histp(axes = T)
h.int(x1,x2,density=20,col=2)
x1 <- 4 ; x2 <- 4.5
h.int(x1,x2,density=20,col=2)
axis(1,c(x1,x2),col.axis=2)
curve(F.int(x),min(brk)-1,max(brk)+1,101)
curve(F.int(x),min(brk)-1,max(brk)+1,1001)
curve(F.int(x),min(brk)-1,max(brk)+1)
curve(F.int(x),min(brk)-1,max(brk)+1,10001)
plot(brk,c(0,dat2$Fj))
plot(c(min(brk)-1,brk,max(brk)+1),c(0,dat2$Fj,1))
plot(c(min(brk)-1,brk,max(brk)+1),c(0,0,dat2$Fj,1))
plot(c(min(brk)-1,brk,max(brk)+1),c(0,0,dat2$Fj,1),type="l")
plot(c(min(brk)-1,brk,max(brk)+1),c(0,0,dat2$Fj,1),type="l",axes=F,xlab="x",ylab="F(x)")
axis(1,brk)
axis(2,c(0,dat2$Fj))
axis(2,round(c(0,dat2$Fj),2),las=2)
plot(c(min(brk)-1,brk,max(brk)+1),c(0,0,dat2$Fj,1),type="l",axes=F,xlab="x",ylab="F(x)")
axis(1,brk)
axis(2,round(c(0,dat2$Fj),2),las=2)
histp(axes = T)
h.int(x1,x2,density=20,col=2)
axis(1,c(x1,x2),col.axis=2)
segments(x0 = x2,x1 = x2,y0 = 0,y1 = F.int(x2))
plot(c(min(brk)-1,brk,max(brk)+1),c(0,0,dat2$Fj,1),type="l",axes=F,xlab="x",ylab="F(x)")
axis(1,brk)
axis(2,round(c(0,dat2$Fj),2),las=2)
segments(x0 = x2,x1 = x2,y0 = 0,y1 = F.int(x2))
segments(x0 = 0,x1 = x2,y0 = F.int(x2),y1 = F.int(x2))
axis(1,c(x1,x2),col.axis=2)
plot(c(min(brk)-1,brk,max(brk)+1),c(0,0,dat2$Fj,1),type="l",axes=F,xlab="x",ylab="F(x)")
axis(1,brk)
axis(2,round(c(0,dat2$Fj),2),las=2)
axis(1,c(x1,x2),col.axis=2)
segments(x0 = x2,x1 = x2,y0 = -1,y1 = F.int(x2))
segments(x0 = min(brk)-10,x1 = x2,y0 = F.int(x2),y1 = F.int(x2))
plot(c(min(brk)-1,brk,max(brk)+1),c(0,0,dat2$Fj,1),type="l",axes=F,xlab="x",ylab="F(x)")
axis(1,brk)
axis(2,round(c(0,dat2$Fj),2),las=2)
axis(1,c(x1,x2),col.axis=2)
segments(x0 = x2,x1 = x2,y0 = -1,y1 = F.int(x2),lty=2,col="grey")
segments(x0 = min(brk)-10,x1 = x2,y0 = F.int(x2),y1 = F.int(x2),lty=2,col="grey")
segments(x0 = x2,x1 = x2,y0 = -1,y1 = F.int(x2),lty=2,col="ared")
source(src_(main.r))
source(src_("main.r"))
source(src_("main.R"))
iblue <- darken(rgb(0.024,0.282,0.478),amount = .4)
mblue <- rgb(0.024,0.282,0.478)
ablue <- rgb(0.729,0.824,0.878)
ared  <- rgb(0.671,0.161,0.18)
plot(c(min(brk)-1,brk,max(brk)+1),c(0,0,dat2$Fj,1),type="l",axes=F,xlab="x",ylab="F(x)")
axis(1,brk)
axis(2,round(c(0,dat2$Fj),2),las=2)
axis(1,c(x1,x2),col.axis=2)
segments(x0 = -10,x1 = dat2$xsup,y0 = dat2$Fj,y1 = dat2$Fj,lty=2,col="grey")
segments(x0 = dat2$xsup,x1 = dat2$xsup,y0 = 0,y1 = dat2$Fj,lty=2,col="grey")
segments(x0 = x2,x1 = x2,y0 = -1,y1 = F.int(x2),lty=2,col="ared")
segments(x0 = min(brk)-10,x1 = x2,y0 = F.int(x2),y1 = F.int(x2),lty=2,col=ared)
segments(x0 = x2,x1 = x2,y0 = -1,y1 = F.int(x2),lty=2,col=ared)
axis(1,c(x1,x2),col.axis=ared)
segments(x0 = min(brk)-10,x1 = x1,y0 = F.int(x1),y1 = F.int(x1),lty=2,col=ared)
segments(x0 = x1,x1 = x1,y0 = -1,y1 = F.int(x1),lty=2,col=ared)
axis(1,F.int(c(x1,x2)),col.axis=ared)
axis(2,round(F.int(c(x1,x2)),2),col.axis=ared,las=2)
axis(2,F.int(c(x1,x2)),round(F.int(c(x1,x2)),2),col.axis=ared,las=2)
plot(c(min(brk)-1,brk,max(brk)+1),c(0,0,dat2$Fj,1),type="l",axes=F,xlab="x",ylab="F(x)")
axis(1,brk)
axis(2,round(c(0,dat2$Fj),2),las=2)
axis(1,c(x1,x2),col.axis=ared)
axis(2,F.int(c(x1,x2)),round(F.int(c(x1,x2)),2),col.axis=ared,las=2)
segments(x0 = -10,x1 = dat2$xsup,y0 = dat2$Fj,y1 = dat2$Fj,lty=2,col="grey")
segments(x0 = dat2$xsup,x1 = dat2$xsup,y0 = 0,y1 = dat2$Fj,lty=2,col="grey")
segments(x0 = x2,x1 = x2,y0 = -1,y1 = F.int(x2),lty=2,col=ared)
segments(x0 = min(brk)-10,x1 = x2,y0 = F.int(x2),y1 = F.int(x2),lty=2,col=ared)
segments(x0 = x1,x1 = x1,y0 = -1,y1 = F.int(x1),lty=2,col=ared)
segments(x0 = min(brk)-10,x1 = x1,y0 = F.int(x1),y1 = F.int(x1),lty=2,col=ared)
Rip <- function(input,graf){
plot(c(min(brk)-1,brk,max(brk)+1),c(0,0,dat2$Fj,1),type="l",axes=F,xlab="x",ylab="F(x)")
axis(1,brk)
axis(2,round(c(0,dat2$Fj),2),las=2)
axis(1,c(x1,x2),col.axis=ared)
axis(2,F.int(c(x1,x2)),round(F.int(c(x1,x2)),2),col.axis=ared,las=2)
segments(x0 = -10,x1 = dat2$xsup,y0 = dat2$Fj,y1 = dat2$Fj,lty=2,col="grey")
segments(x0 = dat2$xsup,x1 = dat2$xsup,y0 = 0,y1 = dat2$Fj,lty=2,col="grey")
segments(x0 = x2,x1 = x2,y0 = -1,y1 = F.int(x2),lty=2,col=ared)
segments(x0 = min(brk)-10,x1 = x2,y0 = F.int(x2),y1 = F.int(x2),lty=2,col=ared)
segments(x0 = x1,x1 = x1,y0 = -1,y1 = F.int(x1),lty=2,col=ared)
segments(x0 = min(brk)-10,x1 = x1,y0 = F.int(x1),y1 = F.int(x1),lty=2,col=ared)
}
plot(c(min(brk)-1,brk,max(brk)+1),c(0,0,dat2$Fj,1),type="l",axes=F,xlab="x",ylab="F(x)")
axis(1,brk)
axis(2,c(0,dat2$Fj),round(c(0,dat2$Fj),2),las=2)
axis(1,c(x1,x2),col.axis=ared)
axis(2,F.int(c(x1,x2)),round(F.int(c(x1,x2)),2),col.axis=ared,las=2)
segments(x0 = -10,x1 = dat2$xsup,y0 = dat2$Fj,y1 = dat2$Fj,lty=2,col="grey")
segments(x0 = dat2$xsup,x1 = dat2$xsup,y0 = 0,y1 = dat2$Fj,lty=2,col="grey")
segments(x0 = x2,x1 = x2,y0 = -1,y1 = F.int(x2),lty=2,col=ared)
segments(x0 = min(brk)-10,x1 = x2,y0 = F.int(x2),y1 = F.int(x2),lty=2,col=ared)
segments(x0 = x1,x1 = x1,y0 = -1,y1 = F.int(x1),lty=2,col=ared)
segments(x0 = min(brk)-10,x1 = x1,y0 = F.int(x1),y1 = F.int(x1),lty=2,col=ared)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(dat2)
rm(dat2)
rm(dat3)
runApp()
View(dat2)
View(dat3)
View(dat2)
dat2
k
brk
rm(brk)
rm(k)
rm(dat2)
rm(dat3)
rm(list=ls())
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
dens <- function(brk,nnn,x){
set.seed(1)
n <- sum(nnn)
samp <- genera_dati(brk = brk,nnn = nnn,n = n)
source(src_("stat-base.R"),local = T)
x1 <- x$x1
x2 <- x$x2
histp(axes = T)
h.int(x1,x2,density=20,col=2)
axis(1,c(x1,x2),col.axis=2)
}
rip <- function(brk,nnn,x){
set.seed(1)
n <- sum(nnn)
samp <- genera_dati(brk = brk,nnn = nnn,n = n)
source(src_("stat-base.R"),local = T)
x1 <- x$x1
x2 <- x$x2
plot(c(min(brk)-1,brk,max(brk)+1),c(0,0,dat2$Fj,1),type="l",axes=F,xlab="x",ylab="F(x)")
axis(1,brk)
axis(2,c(0,dat2$Fj),round(c(0,dat2$Fj),2),las=2)
axis(1,c(x1,x2),col.axis=ared)
axis(2,F.int(c(x1,x2)),round(F.int(c(x1,x2)),2),col.axis=ared,las=2)
segments(x0 = -10,x1 = dat2$xsup,y0 = dat2$Fj,y1 = dat2$Fj,lty=2,col="grey")
segments(x0 = dat2$xsup,x1 = dat2$xsup,y0 = 0,y1 = dat2$Fj,lty=2,col="grey")
segments(x0 = x2,x1 = x2,y0 = -1,y1 = F.int(x2),lty=2,col=ared)
segments(x0 = min(brk)-10,x1 = x2,y0 = F.int(x2),y1 = F.int(x2),lty=2,col=ared)
segments(x0 = x1,x1 = x1,y0 = -1,y1 = F.int(x1),lty=2,col=ared)
segments(x0 = min(brk)-10,x1 = x1,y0 = F.int(x1),y1 = F.int(x1),lty=2,col=ared)
}
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
tags
tags$header
runApp()
runApp()
tab <- kable(dat3[,1:7],booktabs=T,escape = F,linesep="",format = "latex") %>%
kable_styling(full_width = F, latex_options = "HOLD_position")
brk
brk <- 0:2
nnn <- 1:3
nnn <- 1:2
genera_dati <- function(brk,nnn){
k <- length(brk)
brk1 <- brk[1:(k-1)]
brk2 <- brk[2:(k)]
brk_c <- (brk1+brk2)/2
return(rep(brk_c,times=nnn))
}
iblue <- darken(rgb(0.024,0.282,0.478),amount = .4)
mblue <- rgb(0.024,0.282,0.478)
ablue <- rgb(0.729,0.824,0.878)
ared  <- rgb(0.671,0.161,0.18)
dens <- function(brk,nnn,x){
set.seed(1)
n <- sum(nnn)
samp <- genera_dati(brk = brk,nnn = nnn)
source("stat-base.R",local = T)
x1 <- x[1]
x2 <- x[2]
print(x)
histp(axes = T)
h.int(x1,x2,density=20,col=2)
axis(1,c(x1,x2),col.axis=2)
}
rip <- function(brk,nnn,x){
set.seed(1)
n <- sum(nnn)
samp <- genera_dati(brk = brk,nnn = nnn)
source(src_("stat-base.R"),local = T)
x1 <- x[1]
x2 <- x[2]
plot(c(min(brk)-1,brk,max(brk)+1),c(0,0,dat2$Fj,1),type="l",axes=F,xlab="x",ylab="F(x)")
axis(1,brk)
axis(2,c(0,dat2$Fj),round(c(0,dat2$Fj),2),las=2)
axis(1,c(x1,x2),col.axis=ared)
axis(2,F.int(c(x1,x2)),round(F.int(c(x1,x2)),2),col.axis=ared,las=2)
segments(x0 = -10,x1 = dat2$xsup,y0 = dat2$Fj,y1 = dat2$Fj,lty=2,col="grey")
segments(x0 = dat2$xsup,x1 = dat2$xsup,y0 = 0,y1 = dat2$Fj,lty=2,col="grey")
segments(x0 = x2,x1 = x2,y0 = -1,y1 = F.int(x2),lty=2,col=ared)
segments(x0 = min(brk)-10,x1 = x2,y0 = F.int(x2),y1 = F.int(x2),lty=2,col=ared)
segments(x0 = x1,x1 = x1,y0 = -1,y1 = F.int(x1),lty=2,col=ared)
segments(x0 = min(brk)-10,x1 = x1,y0 = F.int(x1),y1 = F.int(x1),lty=2,col=ared)
}
n <- sum(nnn)
samp <- genera_dati(brk = brk,nnn = nnn)
source(src_("stat-base.R"),local = T)
x1 <- x[1]
x2 <- x[2]
plot(c(min(brk)-1,brk,max(brk)+1),c(0,0,dat2$Fj,1),type="l",axes=F,xlab="x",ylab="F(x)")
axis(1,brk)
axis(2,c(0,dat2$Fj),round(c(0,dat2$Fj),2),las=2)
axis(1,c(x1,x2),col.axis=ared)
axis(2,F.int(c(x1,x2)),round(F.int(c(x1,x2)),2),col.axis=ared,las=2)
tab <- kable(dat3[,1:7],booktabs=T,escape = F,linesep="",format = "latex") %>%
kable_styling(full_width = F, latex_options = "HOLD_position")
tab
runApp()
runApp()
lapply(names(dat3), function(name) HTML(name))
runApp()
shiny::runApp()
runApp()
runApp()
HTML(dat3)
HTML("$4$")
class(dat3)
names(dat3)
df
shiny::runApp()
names(dat3)
runApp()
runApp()
runApp()
runApp()
names(dat3)[1]
names(dat3)[1] <- "$[\\text{x}_j,$"
names(dat3) <- lapply(names(dat3), function(name) (paste("$",name,"$",sep = "")))
names(dat3)
runApp()
runApp()
dat3[,1:7]
df
df_ <- data.frame(A = c("$$\\alpha+\\beta$$", 33.1, 6),B = c(111111, 3333333, 3123.233))
names(df_) <- c("$$[\\text{x}_j,$$","$$B$$")
df_
class(df_)
class(dat3)
names(df_)
names(dat3)
runApp()
#   names(dat3) <- lapply(names(dat3), function(name) (paste("$",name,"$",sep = "")))
df_ <- data.frame(dat3[,1:7])
df_
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
print(dat3)
list(dat3)
cat(dat3)
unclass(dat3)
unclass(dat2)
dat2
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
genera_dati
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
paste("$",names(dat3),"$",sep="")
source(src_("stat-base.R"),local = T)
names(dat3)[1] <- "$[\\text{x}_j,$"
names(dat3)<- paste("$",names(dat3),"$",sep="")
names(dat3)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
F_print(x = input$range[1],x2 = input$range[2])
dat2
F_print(1.2)
F_print(1.2,x2 = 2.4)
F_print
F_print(1.2,x2 = 2.4)
F_print(x = 1.2,x2 = 2.4)
F_print(x = 1.2,x2 = 2.4,verso = )
F_print(x = 1.2,x2 = 2.4,verso = "")
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
F_print(x = 1.2,x2 = 2.4,verso = "")
runApp()
F_print(x = 1.2,x2 = 2.4,verso = "")
runApp()
runApp()
runApp()
source("~/OneDrive/Stat/App/FdR_descrittiva/stat-base.R")
F_print(x = 1.2,x2 = 2.4,verso = "")
HTML(F_print(x = 1.2,x2 = 2.4,verso = ""))
runApp()
runApp()
HTML(F_print(x = 1.2,x2 = 2.4,verso = ""))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
n
runApp()
runApp()
(F_print(x = 1.2,x2 = 2.4,verso = ""))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
withMathJax(kable(dat3[,c(1:7)],booktabs=T,escape = F,linesep="",digits = 4,format = "latex") %>%
kable_styling(full_width = F, latex_options = "HOLD_position"))
runApp()
runApp()
withMathJax(paste("$$",kable(dat3[,c(1:7)],booktabs=T,escape = F,linesep="",digits = 4,format = "latex") %>%
kable_styling(full_width = F, latex_options = "HOLD_position")),"$$")
runApp()
runApp()
runApp()
runApp('~/OneDrive/Stat/App/discreto-continuo')
runApp('~/OneDrive/Stat/App/normale')
runApp('~/OneDrive/Stat/App/TLC')
