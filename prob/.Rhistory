runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
two_way <- function(S_1,S_2,num1,num2,op=`+`,EV=T,vnam="$X$",size="\\normalsize "){
den1 <- rep(sum(num1),times=length(S_1))
den2 <- rep(sum(num2),times=length(S_2))
k1 <- length(S_1)
k2 <- length(S_2)
P_1 <- num1/den1
P_2 <- num2/den2
SS <- outer(S_2,S_1,op)
p1 <- P_1
NN <- outer(num2,num1)
DD <- outer(den2,den1)
frc  <- ifelse(html,"\\frac","\\sfrac")
hed  <- ifelse(html,"\\[\n","\\[\\arraycolsep=10pt\\def\\arraystretch{1}")
frac <- function(i,j){
paste(op(S_2[i],S_1[j]),";&","\\color{red}{",frc,"{",num2[i]*num1[j],"}{",den2[i]*den1[j],"}}",sep="")
}
mat1 <- outer(1:length(S_2),1:length(S_1),frac)
mat1 <- cbind(paste(S_2,";\\color{blue}{",num2,"/",den2,"}"),mat1)
cols <- paste(paste(paste("&",paste(paste(S_1,";"),paste("{",num1,"}"),sep=paste("&\\color{blue}{", frc))),paste("{",den1,"}}"),collapse = " "),"\\\\ \n")
allign <- paste("r|",paste(rep("r",times=2*k1),collapse = ""),sep="",collapse = "")
paste(size,"\n\n")
paste(hed,"\\begin{array}",paste("{",allign,"}\n"),
cols,"\\hline \n",
apply(mat1,1,function(x)c(paste(x,collapse = "& "),"\\\\ \n")),
"\\end{array}\n \\]\n\n",sep ="")
paste("\\normalsize E ricaviamo la distribuzione di,",vnam,"\n\n")
S_3 <- sort(unique(as.numeric(outer(S_1,S_2,op))))
num3 <- 1:length(S_3)
den3 <- 1:length(S_3)
for (i in 1:length(S_3)){
num3[i] <- sum(NN[SS==S_3[i]])
den3[i] <- DD[SS==S_3[i]][1]
}
k3 <- length(S_3)
allign <- paste("r|",paste(rep("r",times=k3),collapse = ""),sep="",collapse = "")
rig1 <- paste(vnam," &",paste(S_3,collapse = "& "),"\\\\ \n")
rig2 <- paste("P(",vnam,") &",paste(frc,"{",num3,"}","{",den3,"}",collapse = "& ",sep=""))
paste(size,"\n\n")
paste("\\[
\\begin{array}{",allign,"}\n",
rig1,"\\hline \n",
rig2,
"\\\\ \n \\end{array}\n \\]\n")
urn <- rep(S_3,times=num3)
if (EV){
paste("\\normalsize Calcoliamo valore atteso e varianza\n\n")
paste(size,"\n\n")
paste(stat_(urn,semp = T),"\\normalsize\n\n")
}
return(list(S_3=S_3,num3=num3,den3=den3,urn=urn))
}
two_way(0:1,0:1,c(1,1),c(1,1))
two_way <- function(S_1,S_2,num1,num2,op=`+`,EV=T,vnam="$X$",size="\\normalsize "){
den1 <- rep(sum(num1),times=length(S_1))
den2 <- rep(sum(num2),times=length(S_2))
k1 <- length(S_1)
k2 <- length(S_2)
P_1 <- num1/den1
P_2 <- num2/den2
htmpl <- T
SS <- outer(S_2,S_1,op)
p1 <- P_1
NN <- outer(num2,num1)
DD <- outer(den2,den1)
frc  <- ifelse(html,"\\frac","\\sfrac")
hed  <- ifelse(html,"\\[\n","\\[\\arraycolsep=10pt\\def\\arraystretch{1}")
frac <- function(i,j){
paste(op(S_2[i],S_1[j]),";&","\\color{red}{",frc,"{",num2[i]*num1[j],"}{",den2[i]*den1[j],"}}",sep="")
}
mat1 <- outer(1:length(S_2),1:length(S_1),frac)
mat1 <- cbind(paste(S_2,";\\color{blue}{",num2,"/",den2,"}"),mat1)
cols <- paste(paste(paste("&",paste(paste(S_1,";"),paste("{",num1,"}"),sep=paste("&\\color{blue}{", frc))),paste("{",den1,"}}"),collapse = " "),"\\\\ \n")
allign <- paste("r|",paste(rep("r",times=2*k1),collapse = ""),sep="",collapse = "")
paste(size,"\n\n")
paste(hed,"\\begin{array}",paste("{",allign,"}\n"),
cols,"\\hline \n",
apply(mat1,1,function(x)c(paste(x,collapse = "& "),"\\\\ \n")),
"\\end{array}\n \\]\n\n",sep ="")
paste("\\normalsize E ricaviamo la distribuzione di,",vnam,"\n\n")
S_3 <- sort(unique(as.numeric(outer(S_1,S_2,op))))
num3 <- 1:length(S_3)
den3 <- 1:length(S_3)
for (i in 1:length(S_3)){
num3[i] <- sum(NN[SS==S_3[i]])
den3[i] <- DD[SS==S_3[i]][1]
}
k3 <- length(S_3)
allign <- paste("r|",paste(rep("r",times=k3),collapse = ""),sep="",collapse = "")
rig1 <- paste(vnam," &",paste(S_3,collapse = "& "),"\\\\ \n")
rig2 <- paste("P(",vnam,") &",paste(frc,"{",num3,"}","{",den3,"}",collapse = "& ",sep=""))
paste(size,"\n\n")
paste("\\[
\\begin{array}{",allign,"}\n",
rig1,"\\hline \n",
rig2,
"\\\\ \n \\end{array}\n \\]\n")
urn <- rep(S_3,times=num3)
if (EV){
paste("\\normalsize Calcoliamo valore atteso e varianza\n\n")
paste(size,"\n\n")
paste(stat_(urn,semp = T),"\\normalsize\n\n")
}
return(list(S_3=S_3,num3=num3,den3=den3,urn=urn))
}
two_way(0:1,0:1,c(1,1),c(1,1))
two_way <- function(S_1,S_2,num1,num2,op=`+`,EV=T,vnam="$X$",size="\\normalsize "){
den1 <- rep(sum(num1),times=length(S_1))
den2 <- rep(sum(num2),times=length(S_2))
k1 <- length(S_1)
k2 <- length(S_2)
P_1 <- num1/den1
P_2 <- num2/den2
html <- T
SS <- outer(S_2,S_1,op)
p1 <- P_1
NN <- outer(num2,num1)
DD <- outer(den2,den1)
frc  <- ifelse(html,"\\frac","\\sfrac")
hed  <- ifelse(html,"\\[\n","\\[\\arraycolsep=10pt\\def\\arraystretch{1}")
frac <- function(i,j){
paste(op(S_2[i],S_1[j]),";&","\\color{red}{",frc,"{",num2[i]*num1[j],"}{",den2[i]*den1[j],"}}",sep="")
}
mat1 <- outer(1:length(S_2),1:length(S_1),frac)
mat1 <- cbind(paste(S_2,";\\color{blue}{",num2,"/",den2,"}"),mat1)
cols <- paste(paste(paste("&",paste(paste(S_1,";"),paste("{",num1,"}"),sep=paste("&\\color{blue}{", frc))),paste("{",den1,"}}"),collapse = " "),"\\\\ \n")
allign <- paste("r|",paste(rep("r",times=2*k1),collapse = ""),sep="",collapse = "")
paste(size,"\n\n")
paste(hed,"\\begin{array}",paste("{",allign,"}\n"),
cols,"\\hline \n",
apply(mat1,1,function(x)c(paste(x,collapse = "& "),"\\\\ \n")),
"\\end{array}\n \\]\n\n",sep ="")
paste("\\normalsize E ricaviamo la distribuzione di,",vnam,"\n\n")
S_3 <- sort(unique(as.numeric(outer(S_1,S_2,op))))
num3 <- 1:length(S_3)
den3 <- 1:length(S_3)
for (i in 1:length(S_3)){
num3[i] <- sum(NN[SS==S_3[i]])
den3[i] <- DD[SS==S_3[i]][1]
}
k3 <- length(S_3)
allign <- paste("r|",paste(rep("r",times=k3),collapse = ""),sep="",collapse = "")
rig1 <- paste(vnam," &",paste(S_3,collapse = "& "),"\\\\ \n")
rig2 <- paste("P(",vnam,") &",paste(frc,"{",num3,"}","{",den3,"}",collapse = "& ",sep=""))
paste(size,"\n\n")
paste("\\[
\\begin{array}{",allign,"}\n",
rig1,"\\hline \n",
rig2,
"\\\\ \n \\end{array}\n \\]\n")
urn <- rep(S_3,times=num3)
if (EV){
paste("\\normalsize Calcoliamo valore atteso e varianza\n\n")
paste(size,"\n\n")
paste(stat_(urn,semp = T),"\\normalsize\n\n")
}
return(list(S_3=S_3,num3=num3,den3=den3,urn=urn))
}
two_way(0:1,0:1,c(1,1),c(1,1))
stat_ <- function(x,p=NULL,mnam="\\mu",vnam="\\sigma^2",semp=F){
n <- length(x)
m <- ifelse(test = is.null(p),mean(x),sum(x*p))
p1 <- character(n)
p2 <- character(n)
p1[x<0]<-"("
p2[x<0]<-")"
xp <- paste(p1,x,p2)
if (!semp){
if(is.null(p)){
paste("\\begin{eqnarray*}\n",
mnam,"&=& \\frac 1{",n,"}(",paste(xp,collapse = "+"),")=",mean(x),"\\\\ \n",
vnam,"&=& \\frac 1{",n,"}(",paste(paste(xp,2,sep = "^"),collapse = "+"),")-(",m,")^2=",s2c(x),
"\n\\end{eqnarray*}\n")
}
if(!is.null(p)){
p <- p/sum(p)
pp <- round(p,4)
paste("\\begin{eqnarray*}\n",
mnam,"&=&",paste(paste(xp,pp,sep = " \\cdot "),collapse = "+"),"=",sum(x*p),"\\\\",
vnam,"&=&(",paste(paste(paste(xp,2,sep = "^"),pp,sep = " \\cdot "),collapse = "+"),")-(",m,")^2=",vvv(x = x,p = p),
"\\end{eqnarray*}")
}} else {
freq <- table(x)
xx <- dimnames(freq)$x
p1 <- character(length(xx))
p2 <- character(length(xx))
p1[xx<0]<-"("
p2[xx<0]<-")"
xx <- paste(p1,xx,p2)
paste("\\begin{eqnarray*}",
mnam,"&=& E(X_i) = \\sum_{x\\in S_X}x P(X=x)\\\\ \n",
"&=&",paste(paste(xx,"\\frac {",freq,"}{",n,"}"),collapse = "+"),"\\\\
&=&",mean(x),"\\\\ \n",
vnam,"&=& V(X_i) = \\sum_{x\\in S_X}x^2 P(X=x)-\\mu^2\\\\ \n",
"&=&\\left(",paste(paste(xx,"^2\\frac {",freq,"}{",n,"}"),collapse = "+"),"\\right)-(",m,")^2\\\\
&=&",s2c(x),
"\n\\end{eqnarray*}\n")
}
}
two_way(0:1,0:1,c(1,1),c(1,1))
source("~/OneDrive/Stat/App/prob/script.R")
two_way(0:1,0:1,c(1,1),c(1,1))
source("~/OneDrive/Stat/App/prob/script.R")
two_way(0:1,0:1,c(1,1),c(1,1))
source("~/OneDrive/Stat/App/prob/script.R")
two_way(0:1,0:1,c(1,1),c(1,1))
source("~/OneDrive/Stat/App/prob/script.R")
two_way(0:1,0:1,c(1,1),c(1,1))
source("~/OneDrive/Stat/App/prob/script.R")
two_way(0:1,0:1,c(1,1),c(1,1))
runApp()
runApp()
runApp()
runApp()
S_1
S_1 <- S_2 <- 0:1
num1 <- num2 <- c(1,1)
withMathJax(paste("$$",two_way(S_1 = S_1,S_2 = S_2,num1 = num1,num2 = num2),"$$"))
paste("$$",two_way(S_1 = S_1,S_2 = S_2,num1 = num1,num2 = num2),"$$")
withMathJax(paste("$$",two_way(S_1 = S_1,S_2 = S_2,num1 = num1,num2 = num2),"$$",collapse = " \n "))
withMathJax(paste("$$",two_way(S_1 = S_1,S_2 = S_2,num1 = num1,num2 = num2),"$$",collapse = ""))
runApp()
source("~/OneDrive/Stat/App/prob/script.R")
two_way(S_1 = S_1,S_2 = S_2,num1 = num1,num2 = num2)
tw <- two_way(S_1 = S_1,S_2 = S_2,num1 = num1,num2 = num2)
tw
source("~/OneDrive/Stat/App/prob/script.R")
tw <- two_way(S_1 = S_1,S_2 = S_2,num1 = num1,num2 = num2)
tw
withMathJax(paste("$$",tw$c1,"$$\n\n"))
withMathJax(paste("$$",tw$c1,"$$\n\n",collapse = ""))
runApp()
withMathJax(paste("$$",paste(tw$c1,collapse = ""),"$$\n\n",collapse = ""))
runApp()
tw
tw <- two_way(S_1 = S_1,S_2 = S_2,num1 = num1,num2 = num2,size = "")
tw
S_1 <- S_2 -1:1
num1 <- num2 <- c(1,1,1)
tw <- two_way(S_1 = S_1,S_2 = S_2,num1 = num1,num2 = num2,size = "")
S_1
S_1 <- S_2 (-1):1
S_1 <- S_2 <- (-1):1
tw <- two_way(S_1 = S_1,S_2 = S_2,num1 = num1,num2 = num2,size = "")
tw
tw$c1
den1 <- rep(sum(num1),times=length(S_1))
den2 <- rep(sum(num2),times=length(S_2))
k1 <- length(S_1)
k2 <- length(S_2)
P_1 <- num1/den1
P_2 <- num2/den2
html <- T
op <- `+`
SS <- outer(S_2,S_1,op)
p1 <- P_1
NN <- outer(num2,num1)
DD <- outer(den2,den1)
frc  <- ifelse(html,"\\frac","\\sfrac")
hed  <- ifelse(html,"\\[\n","\\[\\arraycolsep=10pt\\def\\arraystretch{1}")
frac <- function(i,j){
paste(op(S_2[i],S_1[j]),";&","\\color{red}{",frc,"{",num2[i]*num1[j],"}{",den2[i]*den1[j],"}}",sep="")
}
mat1 <- outer(1:length(S_2),1:length(S_1),frac)
mat1 <- cbind(paste(S_2,";\\color{blue}{",num2,"/",den2,"}"),mat1)
cols <- paste(paste(paste("&",paste(paste(S_1,";"),paste("{",num1,"}"),sep=paste("&\\color{blue}{", frc))),paste("{",den1,"}}"),collapse = " "),"\\\\ \n")
allign <- paste("r|",paste(rep("r",times=2*k1),collapse = ""),sep="",collapse = "")
c0 <-  paste(size,"\n\n")
hed
paste("{",allign,"}\n"),
paste("{",allign,"}\n"),
allign
cols
apply(mat1,1,function(x)c(paste(x,collapse = "& "),"\\\\ \n"))
source("~/OneDrive/Stat/App/prob/script.R")
tw <- two_way(S_1 = S_1,S_2 = S_2,num1 = num1,num2 = num2)
tw
runApp()
runApp()
runApp()
runApp()
tw$c4
withMathJax(paste("",tw$c1,"\n\n",tw$c2,tw$c4,collapse = "\n"))
source("~/OneDrive/Stat/App/prob/script.R")
runApp()
runApp()
tw$c5
tw <- two_way(S_1 = S_1,S_2 = S_2,num1 = num1,num2 = num2,vnam = "S")
tw$c5
tw$c6
tw$c7
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
op = "-"
tw <- two_way(S_1 = S_1,S_2 = S_2,num1 = num1,num2 = num2,vnam = "W",op = op)
op
runApp()
op
tw <- two_way(S_1 = S_1,S_2 = S_2,num1 = num1,num2 = num2,vnam = "W",op = op)
op <- `-`
op
runApp()
rm(op)
runApp()
list("+" = `+`, "-" = `-`, "*" = `*`, "/" = `/`)
runApp()
runApp()
runApp()
runApp()
runApp()
two_way
runApp()
runApp()
runApp()
S_!
S_1
rm(S_1)
rm(S_2)
runApp()
runApp()
runApp()
runApp()
runApp()
S_1
S_1 <- 1:3
S_2 <- S_1
num1
num2
den1 <- rep(sum(num1),times=length(S_1))
den2 <- rep(sum(num2),times=length(S_2))
den1
den2
k1 <- length(S_1)
k2 <- length(S_2)
P_1 <- num1/den1
P_2 <- num2/den2
html <- T
SS <- round(outer(S_2,S_1,op),4)
SS
op <- `/`
SS <- round(outer(S_2,S_1,op),4)
SS
p1 <- P_1
NN <- outer(num2,num1)
DD <- outer(den2,den1)
frc  <- ifelse(html,"\\frac","\\sfrac")
hed  <- ifelse(html,"\\[\n","\\[\\arraycolsep=10pt\\def\\arraystretch{1}")
frac <- function(i,j){
paste(op(S_2[i],S_1[j]),";&","\\color{red}{",frc,"{",num2[i]*num1[j],"}{",den2[i]*den1[j],"}}",sep="")
}
frac
mat1 <- outer(1:length(S_2),1:length(S_1),frac)
mat1 <- cbind(paste(S_2,";\\color{blue}{",num2,"/",den2,"}"),mat1)
cols <- paste(paste(paste("&",paste(paste(S_1,";"),paste("{",num1,"}"),sep=paste("&\\color{blue}{", frc))),paste("{",den1,"}}"),collapse = " "),"\\\\ \n")
mat1
mat1 <- outer(1:length(S_2),1:length(S_1),frac)
mat1
S_2
mat1
mat1 <- cbind(paste(S_2,";\\color{blue}{",num2,"/",den2,"}"),mat1)
mat1
outer(1:length(S_2),1:length(S_1),frac)
paste(S_2,";\\color{blue}{",num2,"/",den2,"}")
mat1
mat1 <- outer(1:length(S_2),1:length(S_1),frac)
mat1
frac <- function(i,j){
paste(SS[i,j],";&","\\color{red}{",frc,"{",num2[i]*num1[j],"}{",den2[i]*den1[j],"}}",sep="")
}
mat1 <- outer(1:length(S_2),1:length(S_1),frac)
frac <- function(i,j){
paste(SS[j,i],";&","\\color{red}{",frc,"{",num2[i]*num1[j],"}{",den2[i]*den1[j],"}}",sep="")
}
mat1 <- outer(1:length(S_2),1:length(S_1),frac)
frac <- function(i,j){
paste(round(op(S_2[i],S_1[j]),4),";&","\\color{red}{",frc,"{",num2[i]*num1[j],"}{",den2[i]*den1[j],"}}",sep="")
}
mat1 <- outer(1:length(S_2),1:length(S_1),frac)
mat1 <- cbind(paste(S_2,";\\color{blue}{",num2,"/",den2,"}"),mat1)
cols <- paste(paste(paste("&",paste(paste(S_1,";"),paste("{",num1,"}"),sep=paste("&\\color{blue}{", frc))),paste("{",den1,"}}"),collapse = " "),"\\\\ \n")
mat1
runApp()
round(sort(unique(as.numeric(outer(S_1,S_2,op)))),4)
S_1
S_2
outer(S_1,S_2,op)
runApp()
runApp()
runApp()
runApp()
runApp()
paste("\\begin{eqnarray*}\n",
mnam,"&=& \\frac 1{",n,"}(",paste(xp,collapse = "+"),")=",m,"\\\\ \n",
vnam,"&=& \\frac 1{",n,"}(",paste(paste(xp,2,sep = "^"),collapse = "+"),")-(",m,")^2=",round(s2c(x),4),
"\n\\end{eqnarray*}\n")
mnam="\\mu"
vnam="\\sigma^2"
paste("\\begin{eqnarray*}\n",
mnam,"&=& \\frac 1{",n,"}(",paste(xp,collapse = "+"),")=",m,"\\\\ \n",
vnam,"&=& \\frac 1{",n,"}(",paste(paste(xp,2,sep = "^"),collapse = "+"),")-(",m,")^2=",round(s2c(x),4),
"\n\\end{eqnarray*}\n")
n <- length(x)
m <- round(ifelse(test = is.null(p),mean(x),sum(x*p)),4)
p1 <- character(n)
p2 <- character(n)
p1[x<0]<-"("
p2[x<0]<-")"
xp <- paste(p1,x,p2)
paste("\\begin{eqnarray*}\n",
mnam,"&=& \\frac 1{",n,"}(",paste(xp,collapse = "+"),")=",m,"\\\\ \n",
vnam,"&=& \\frac 1{",n,"}(",paste(paste(xp,2,sep = "^"),collapse = "+"),")-(",m,")^2=",round(s2c(x),4),
"\n\\end{eqnarray*}\n")
paste("\\begin{eqnarray*}\n",
mnam,"&=&",paste(paste(xp,pp,sep = " \\cdot "),collapse = "+"),"=",sum(x*p),"\\\\",
vnam,"&=&(",paste(paste(paste(xp,2,sep = "^"),pp,sep = " \\cdot "),collapse = "+"),")-(",m,")^2=",vvv(x = x,p = p),
"\\end{eqnarray*}")
vvv <- function(x,p=NULL) {               # varianza per distr tabella e prob
if (is.null(p)) v <- mean(x^2)-mean(x)^2
else v <- sum(p*x^2)-(sum(p*x))^2
return(v)
}
paste("\\begin{eqnarray*}\n",
mnam,"&=&",paste(paste(xp,pp,sep = " \\cdot "),collapse = "+"),"=",sum(x*p),"\\\\",
vnam,"&=&(",paste(paste(paste(xp,2,sep = "^"),pp,sep = " \\cdot "),collapse = "+"),")-(",m,")^2=",vvv(x = x,p = p),
"\\end{eqnarray*}")
paste("\\begin{eqnarray*}",
mnam,"&=& E(W) = \\sum_{w\\in S_W}x P(W=w)\\\\ \n",
"&=&",paste(paste(xx,"\\frac {",freq,"}{",n,"}"),collapse = "+"),"\\\\
&=&",mean(x),"\\\\ \n",
vnam,"&=& V(W) = \\sum_{w\\in S_W}w^2 P(X=w)-\\mu^2\\\\ \n",
"&=&\\left(",paste(paste(xx,"^2\\frac {",freq,"}{",n,"}"),collapse = "+"),"\\right)-(",m,")^2\\\\
&=&",s2c(x),
"\n\\end{eqnarray*}\n")
xx <- dimnames(freq)$x
runApp()
runApp()
runApp()
den1 <- rep(sum(num1),times=length(S_1))
den2 <- rep(sum(num2),times=length(S_2))
k1 <- length(S_1)
k2 <- length(S_2)
P_1 <- num1/den1
P_2 <- num2/den2
html <- T
SS <- round(outer(S_2,S_1,op),4)
p1 <- P_1
NN <- outer(num2,num1)
DD <- outer(den2,den1)
frc  <- ifelse(html,"\\frac","\\sfrac")
hed  <- ifelse(html,"\\[\n","\\[\\arraycolsep=10pt\\def\\arraystretch{1}")
frac <- function(i,j){
paste(round(op(S_2[i],S_1[j]),4),";&","\\color{red}{",frc,"{",num2[i]*num1[j],"}{",den2[i]*den1[j],"}}",sep="")
}
mat1 <- outer(1:length(S_2),1:length(S_1),frac)
mat1 <- cbind(paste(S_2,";\\color{blue}{",num2,"/",den2,"}"),mat1)
mat1
cols <- paste(paste(paste("&",paste(paste(S_1,";"),paste("{",num1,"}"),sep=paste("&\\color{blue}{", frc))),paste("{",den1,"}}"),collapse = " "),"\\\\ \n")
cols
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
withMathJax(paste("$$\\Large X\\sim \\text{Binom}(n=",n,";\\pi=",pp,")$$"))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
